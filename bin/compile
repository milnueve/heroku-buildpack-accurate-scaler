#!/usr/bin/bash

OTCC_VERSION=0.59.0

BUILD_DIR=$1
CACHE_DIR=$2
#ENV_DIR=$3

arrow() {
  echo '----->' "$@"
}

indent() {
  echo '      ' "$@"
}

fetch_otelcol() {
  if [[ ! -f $CACHE_DIR/otelcol-contrib-${OTCC_VERSION} ]]; then
    indent "Fetching OpenTelemetry Collector Contrib v${OTCC_VERSION} ..."
    wget --quiet -O otcc.tar.gz https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v${OTCC_VERSION}/otelcol-contrib_${OTCC_VERSION}_linux_amd64.tar.gz
    tar -xzf otcc.tar.gz
    rm -f $CACHE_DIR/otelcol-contrib-* || true
    mv otelcol-contrib $CACHE_DIR/otelcol-contrib-${OTCC_VERSION}
  else
    indent "OpenTelemetry Collector Contrib v${OTCC_VERSION} found in cache"
  fi
}

install_otel_collector() {
  indent "Installing OpenTelemetry Collector Contrib at the destination folder"
  cp $CACHE_DIR/otelcol-contrib-${OTCC_VERSION} $BUILD_DIR/bin/otelcol-contrib
  chmod a+x $BUILD_DIR/bin/otelcol-contrib
}

arrow "OpenTelemetry Collector Contrib v${OTCC_VERSION} installation"
mkdir -p "$BUILD_DIR/bin"
fetch_otelcol
install_otel_collector

mkdir -p $BUILD_DIR/.profile.d

if [[ ! -f ${BUILD_DIR}/.profile.d/accurate-scaler.sh ]]; then
  arrow "Installing startup script ..."
  cat > ${BUILD_DIR}/.profile.d/accurate-scaler.sh <<-SH
function proctype() {
  for monitored_proctype in \$monitored_proctypes; do
    if [[ \$DYNO =~ ^\$monitored_proctype.* ]]; then
      echo \$monitored_proctype
    fi
  done
}

export PATH=\$PATH:\$HOME/bin

# Check if buildpack was correctly installed or exit with failure
if [[ ! -x \$HOME/bin/otelcol-contrib ]]; then
  echo "OpenTelemetry Collector Contrib not found. Buildpack failed to install correctly."
  exit 1
fi

monitored_proctypes=\${ACCURATE_SCALER_MONITORED_PROCTYPES:-web worker}
dyno_proctype=\$(proctype)

# Check if dyno is running a monitored process type or notify and exit without failing
if [[ \$dyno_proctype == "" ]]; then
  echo "AccurateScaler: Dyno '\$DYNO' is not running a monitored process type, PushProx Client won't be started."
else
  echo "AccurateScaler: Detected monitored '\$dyno_proctype' process type running in dyno."

  # Check if add-on is (correctly) installed or notify and exit without failing
  if [[ \$ACCURATE_SCALER_PROM_WRITER_URL == "" || \$ACCURATE_SCALER_APP_ID == "" ]]; then
    echo "AccurateScaler: Add-on config vars missing! OpenTelemetry Collector Contrib won't be started."
  else
    echo "AccurateScaler: Starting OpenTelemetry Collector Contrib ..."
    otelcol-contrib --config=file:\$HOME/accurate-scaler/otelcol-contrib/config.yaml &
  fi
fi
SH
fi

mkdir -p $BUILD_DIR/accurate-scaler/otelcol-contrib/prom_rw

if [[ ! -f $BUILD_DIR/accurate-scaler/otelcol-contrib/config.yaml ]]; then
  arrow "Creating AccurateScaler OpenTelemetry Collector Contrib configuration file ..."
  cat > $BUILD_DIR/accurate-scaler/otelcol-contrib/config.yaml <<-YAML
receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: "prometheus_exporter_gem"
          scrape_interval: 15s
          static_configs:
            - targets: ["localhost:9394"]
processors:
  batch:
    timeout: 60s
exporters:
  prometheusremotewrite:
    endpoint: "\$ACCURATE_SCALER_PROM_WRITER_URL"
    external_labels:
      accurate_scaler_app_id: "\$ACCURATE_SCALER_APP_ID"
      dyno: "\$DYNO:\$(hostname)"
    wal:
      directory: "\$HOME/accurate-scaler/otelcol-contrib/prom_rw
      buffer_size: 600
      truncate_frequency: 2m
    resource_to_telemetry_conversion:
      enabled: true
services:
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [prometheusremotewrite]
YAML
fi
